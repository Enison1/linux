pwd - o diretorio atual
whoami - mostra o usuario atual
ls - lista os itens dentro de um diretorio
	@ ls -l == lista os itens com detalhes.
	@ ls -la == lista os itens com detalhes até os escondidos.
	@ ls / == é o diretorio raiz do linux
	@ ls /home == mostra os usuarios do linux
	@ ls * == lista os itens e sub itens do diretorio atual
echo - mostra msg no terminal
	@ echo "oii" > oi.txt == cria um arq com a msg (oii).
	@ echo "Tudo bem" >> oi.txt == concatena com o arq msg.
cat - ler um arq
	@ \ - quebra a linha para pesquisa e desativa o proximo comando
	@ cat nome?.txt == abre os arqs que só tenha uma casa númerica
	@ cat nome*.txt == abre os arqs que tenha casas númericas.
	@ cat *.txt == abre os arqs txt.
	@ cat nome_arq[123] soomente os que possouam 1 e 2 e 3
		**/[12] somante os que possuam 1 e 2
		**/[1-3] somante os que possuam 1 a 3 
		**/[0-9].txt somante os que possuam 0 a 9
		**/[a-z].txt somante os que possuam letras a a z
		**/[A-Z].txt somante os que possuam letras A a Z
		**/[!0-9].txt somante os que não possuam 0 a 9
		**/{text*, text2*}.txt somante os que possuam os nomes especificados
clear - limpa tela
man - ensina o manual do proximo comando.
	@ man -k == tras correspondencia entre as palavras buscadas
	@ man ls => /-l == pesquisa dentro do manual o parametro -l(n - proximo aparição)
info - traz informações dos camandos
cd - vai para o diretorio pai
	@ cd workspace == entra no diretorio workspace.
	@ cd .. == volta ao diretorio anterior.
mkdir - cria diretorios
rmdir - apaga diretorios vazios
rm - apaga arq
	@ rm -r == apaga diretorios com conteudos
cp - copia o conteudo de um arq para outro (cp msg.txt bv.txt)
	@ cp -r == copia diretorios (cp -r pro-php pro-java)
mv - pode renomear um arq (mv msg.txt bv2.txt) // tbm pode mover o arq para outro local (mv bv.txt pro-php/)
zip -r - zipa um diretorio (zip work.zip workspace/)
	@ unzip -rq == faz a copactação sem apresentar info
unzip - descompacta um zip (unzip work.zip)
	@ unzip -l == lista os arq do zip sem descompactar (unzip -l work.zip)
	@ unzip -q == faz a descopactação sem apresentar info
tar -cz - zipa em formato TAR.gz (tar -cz workspace > work.tar.gz)
	@ tar -xz < work.tar.gz == descompacta arq TAR
	@ tar -czf work.tar.gz workspace == cria arq TAR
	@ tar -xzf work.tar.gz == descompacta arq TAR
	@ tar -xxzf work.tar.gz == descompacta arq TAR e mostra info
touch - muda a ultima modificação do arq sem modificar o arq
date - mostra a date do sistema
head - mostra só as primeiras 10 linha de um arq (head google.txt)
	@ head -n 3 google == mostra só as primeiras 3 linhas do arq
tail - mostra só as ultimas 10 linha de um arq (tail google.txt)
	@ tail -n 3 google == mostra só as ultimas 3 linhas do arq
less - abre o arq no terminal para leitura (less google.txt)
vi - editor de texto no terminal (vi google.txt)
	@ i - digita na pos. atual
	@ a - digita na pos. seguinte
	@ A - digita na ultima pos. da linha
	@ x - apaga o caracter na pos. atual // 11x - apaga 11 caracteres
	@ dd - remove a linha por completo // 11dd - rmove 11 linhas
	@ esc - sai do modo de edição
	@ :w - salva as alterações no arq
	@ :q - fecha o arq
	@ :q! - sair sem salvar
	@ :wq - salva e sair
	@ G - vai para ultima linha // 0G - vai para a primeira linha
	@ $ - vai para o fim da linha atual
	@ / - procura palavras digitadas // n - vai para a proxima // N - retrocede na pesquisa
	@ yy - copia a linha // 11yy - copia 11 linhas
	@ p - cola a linha // 11p - cola 11 vezes a linha
ps - mostra todos os programas roando
	@ ps -e == mostra todos os programs rodando no sistema
	@ ps -ef == mostra todos os programs rodando no sistema com detalhes
	@ ps -ef | grep firefox == (filtra por nome os programas rodados)
	@ pstree == mostra a arvore do sistema
| grep == faz um filtro por nome (cat google.txt | grep california)
kill - finaliza o programa (kill 1155 == mata pelo id e ainda da chance de recuperar)
	@ kill -9 == não da chance, só finaliza
	@ killall -9 top == mata tudo com o nome top sem dó
top - mostra o consumo do sistema por cpu
firefox - abre o programa firefox e trava o terminal // firefox & == abre e joga para backgroud sem travar o terminal
	@ Ctrol + z == para o programa
	@ Ctrol + c == fecha o programa
jobs - mostra quais programas rodando
bg - coloca um programa para rodar em backgroud
fg - coloca um programa para rodar fora do backgroud (no terminal)
gedit dorme & - cria um script e abre o editor dele
sh - executa um programa (sh dorme)
PERMISSÃO (R = leitura, W = escrita, X - execução)[dono, grupro, outros usuario]
chmod +rwx - muda a permissão de execução do arq (chmod +x dorme)
chmod -rwx - muda a permissão de execução do arq (chmod -x dorme)
	@ chmod u-rx jose == tira a permissão de outros usuarios para ler e executar no meu usuario atual
	@ chmod g-rx jose tira a permissão do grupo
	@ chmod g-rx jose tira a permissão de outros usuarios
./dorm - executa um script com a permição do arq
locate - faz uma busca geral dentro do sistema em busca de uma correspondecia
	@ locate -e == mostra um lista sem os arq apagados
updatedb - atualiza os dados do sistema
whict - procura diretorios com o nome passado (which firefox)
passwd - muda a senha do usuario
su - loga com o nuvo usuario
adduser - cria usuarios(sudo adduser nico)
env - mostra todas as variaves do programa
PATH - SÃO AS VARIAVES LOCAIS DO PC AO INICIAR PROGRAMAS
	@ PATH=$PATH:/home/enison/workspace (adicina uma pasta para a inicialização dos programas)
wc - conta palavras e linhas dos arq
	@ wc -w == contas somente as palavras dos arq especificados
	@ wc -c == contas somente os caracteres dos arq especificados
	@ wc -l == contas somente as linhas dos arq especificados

PS1 - aultera o nome do identificador inicial da linha (PS1="Enison>")
PS2 - é o indicador de nova linha ( > )
yum search - pesquisa o programa que vc quer (yum search ftp)
sudo yum install - instala o programa que vc quer (sudo yum instal ftp)
sudo yum remove - remove o programa que vc quer (sudo yum instal ftp)
sudo yum update - atualiza a lista de opção de instalação
dpkg - instala programas baixados por fora
	@ dpkg -i == instala
	@ dpkg -r == remove
yum -f == instal corrige os erros de instalação
service ____ stop/start == finaliza um programa de leve.
./ - roda o programa que vc pdeiu (./oi)
make - testa para ver se ta tudo certo para a instalação
	@ make install - instala o programa baixado via codigo fonte
sudo yum install --only-upgrade ftp == atualiza somente o programa escolhido
sudo yum list --installed == lista todos os programas instalados na maquina
	@ yum --qa == ista todos os programas instalados na maquina
	@ yum -e == remove um program desejado (yum -e linx)
nmcli d - mostra as placas conectada no pc
nmtui - abra as opções de edição das placas
systemctl restart network == sereta a rede de internet
ping == mostra se o servidor esta ativo
	@ Ctl + z == para o ping
yum info == traz informações sobre um programa especifico (yum info mariadb)
yum makecache = faz o cacheamento dos dados da maquina forçado
cat /etc/yum == mostra os arq do yum
type == mostra o tipo de comando (type ls)
	@ type -a  == mostra todos os programas com o msm nome

criar uma variavel no shell (nome=Enison)
imprimir uma variavel (echo $nome)
\u - usuario
\w - diretorio
\: - hora local

** Criar uma script **
== vi nome.sh 
presiona (" i ");
echo "olá"
presiona (" esc ", " :wq ");
adiciona permição de execussão: chmod +x nome.sh
roda o script ./nome.sh
** fim escrever script **


** exportar variaveis para fora do shell **

export nome_variavel

** fim exportação **

env - cria um novo ambiente filho dentro do pai se for passado como algum parametro temporario
as variaveis devem ser ecritas em maiusculas
as variaveis não devem ter espaços entre seu nome/ caso necessario deve ser usado o _
${}-define uma variavel dentro de um texto ou script

unset - remove as variaveis do shel e // export -n == remove a variavel do ambiente

$EDITOR = varial que armazena a preferencia do editor padrão
/src/bin/vi - abre o vi
/bin/nano - abre o nano
nome_programa init - inicializa o programa
-------------- COMANDOS DE NAVEGAÇÃO NO TERMINAL-------
home(Ctrl + A) e end(Ctrl + E) - normal
Ctrl + T - troca as duas ultimas letras digitadas
Ctrl + L - limpa tela
Ctrl + C - cancela o comando atual
Ctrl + D - Finaliza o programa ativo
set -o emacs - é o padrão para navegação no terminal
set -o vi - é o padrão para navegação no terminal do modo VI
help set - ajuda com os modos de navegação do terminal
history - mostra u historico de comandos usados
	@ history 5 - mostra os 5 ultimos comandos.
	@ history -c - limpa o historico dos comandos.
	@ echo $HISTFILE - mostra onde é o arq que guarda o historico de comandos
	@ Ctrl + R - pesquisa inversa nos comandos.
echo $PATH - mostra onde os terminal vai procurar os comandos
hash -d = apaga o cache de um programa especifico
hash -r = apaga todos os caches do sistema
PATH=$PATH:/home/enison - adiciona o meu diretorio na lista de programas executaveis direto
PATH=/home/enison:$PATH = coloca o meu diretorio na frente de todos na lista de procura de programas
which zip - mostra qual programa ele vai executar
	@ which -a = mostra somante programas com o nome pesquisados
whereis - mostra todos os diretorios que tenhão os programas pesquisados
builtin - programas padrão do terminal
tab + tab - mostra todos os comandos que iniciam com as letras pesquisadas
-------- CARACTER ESPECIAIS ---------
; - separa comandos na msm linha
* - coringa de pesquisa
--------------------------------------

echo $? - me diz se o ultimo comando foi execultado corretamente (padrão 0 - deu certo)
&& ; || = modos de condição para executar programas
Exit 0 - faz um programa ter saida 0(dentro do script)
help, --help, -h, -? === ajuda com insformações do comando
man - 
man -k == busca tudo sobre a palavra pesquisada.
















